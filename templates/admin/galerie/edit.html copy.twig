{% extends 'admin/base.html.twig' %}

{% block title %}Administration des galeries d'images{% endblock %}

{% block stylesheets %}
<link rel="stylesheet" href="/css/jquery.fancybox.min.css">
<style>

html { 
    overflow-y: scroll; /* force scrollbar */
    /*scroll-behavior: smooth; */
}

.container {
    min-width: 70%;
}

.grid {
  background-color: white;
}

/* clear fix */
.grid:after {
  content: '';
  display: block;
  clear: both;
}

.grid-item {
    z-index:1;
    width: calc((100% - 30px)/3); /* debug gutter */
    margin-bottom: 0px;
    float: left;
}

.grid-item img {
  display: block;
  position: relative;
  z-index:0;
  width: 100%;
}

.fa-pencil-alt {
    position:absolute;
    right:0;
    padding-right:5px;
    padding-top:8px;   
    color: black;
}

.fa-undo {
    z-index:1;
    position:absolute;
    right:0;
    padding:10px;
    color: black;
    cursor: pointer;
}

.fa-trash-alt {
    z-index:11;
    position:absolute;
    right:0;
    padding:10px;
    color: black;
    cursor: pointer;
}

.fa-trash-alt:hover {
    color: crimson;
}

.fa-undo:hover {
    color: green;
}

.vich-image img {
    margin-top: 30px;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    display: block;
    border-radius:0.25rem;
}

.vich-image a {
    pointer-events: none;
	cursor: default;
}

legend {
    padding-top:0 !important;
}

.grid.are-images-unloaded {
    opacity: 0;
}

.page-load-status {
    display: none;
    padding-top: 20px;
    border-top: 1px solid #DDD;
    text-align: center;
    color: #777;
}

a#cRetour{
    border-radius:3px;
    padding:15px;
    font-size:25px;
    text-align:center;
    color:#fff;
    background:rgba(0, 0, 0, 0.30);
    position:fixed;
    right:20px;
    opacity:1;
    z-index:99999;
    transition:all ease-in 0.5s;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    text-decoration: none;
    line-height:0;
    cursor: pointer;
}
a#cRetour:hover {
  background:rgba(0, 0, 0, 0.8);
}
a#cRetour.cInvisible{
    bottom:-35px;
    opacity:0;
    transition:all ease-in 0.5s;
}

a#cRetour.cVisible{
    bottom: 20px;
    opacity: 1;
}

/*#titreBackground {
    height: 250px;
    background-size: cover;
    opacity: 0.25;    
}*/
#titreImage {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width:100%;
    opacity:0.5;
}

#titreGalerie { 
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@media (max-width: 1200px) {
    .container {
        min-width: 100%;
    }
    .grid-item {
    width: calc((100% - 30px)/2);
    }
}

@media (max-width: 800px) {
    .grid-item {
    width: 100%;
    }
}

</style>
{% endblock %}

{% form_theme form 'admin/galerie/_collectionEdit.html.twig' %}

{% block body %}
<div class="container">
    <div class="mt-5 position-relative rounded" style="height:250px;overflow:hidden;">
        {#<div class="rounded" id="titreBackground" style="background: url({{galerie_cover_path ~ form.vars.value.coverImage}}) no-repeat center center;"></div>#}
        <img id="titreImage" class="rounded" src="{{(galerie_cover_path ~ form.vars.value.coverImage) | imagine_filter('galerie_title_edit') }}" alt="">
        <h1 class="text-center mb-0 h2" id="titreGalerie">Galerie {{form.vars.value.title}}</h1>
    </div>
    <hr class="mb-5 mt-5"></span>
    {{ form_start(form, {'action': path('admin_galerie_edit',{'id':galerieId, 'page':1})}) }}
        <div class="row">
            <div class="col-lg-6">
                {{form_row(form.title)}}
                {{form_row(form.description)}}
                {{form_row(form.order_by)}}
                <fieldset class="form-group">
                    <legend class="col-form-label font-weight-bold">Images de la galerie</legend>
                    <div class="custom-file mb-3">
                        <input type="file" class="custom-file-input" name="uploadFile[]" id="uploadFile" accept=".jpg, .png"  multiple/>
                        <label class="custom-file-label" for="uploadFile">choisissez vos images</label>
                    </div>
                    <input type="hidden" name="firstImg">
                    <input type="hidden" name="lastImg"> 
                    <div id ="inputFilesError" class="alert alert-danger" role="alert" style="display:none;"></div>  
                </fieldset>
            </div>
            <div class="col-lg-6">
                {{form_row(form.imageFile)}}  
            </div>
        </div>
        <div class="row mt-4">
            <div class="col">
                <div class="d-flex justify-content-center">
                    <button id="submit" type="submit" class="btn btn-primary mr-2">
                        <span id="b-e-default"><i class="far fa-save"></i> Enregistrer les modifications</span>
                        <span id="b-e-loading" style="display:none;">
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                            Chargement...   
                        </span>
                    </button>
                    <button type="button" class="btn btn-danger ml-2" id="cancel">
                        <i class="fas fa-undo-alt"></i> Annuler les modifications
                    </button>
                </div>
                {#<div class="progress my-3 d-none">
                    <div id="progress-bar" style="width: 0%;" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="targetLayer" style="display:none;"></div>#}
            </div>
        </div>
        <hr class="mt-5 mb-5"></span>
        <div class='row'>
            <div class="col">
                {{ form_row(form.images) }}
            </div>
        </div>
    {{ form_end(form) }}
    <div class="page-load-status">
        <div class="loader-ellips infinite-scroll-request">
            <div class="spinner-grow text-secondary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <div class="spinner-grow text-secondary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <div class="spinner-grow text-secondary" role="status">
                <span class="sr-only">Loading...</span>
            </div>            
        </div>
        <p class="infinite-scroll-last">Fin de la galerie</p>
        <p class="infinite-scroll-error">Plus de pages à charger</p>
    </div>
    <a id="cRetour"><i class="fas fa-arrow-up"></i></a>  
    {#{{ knp_pagination_render(pagination) }}#}
</div>

{% endblock %}

{% block javascripts %}

        <script src="/js/imagesloaded.pkgd.min.js"></script>
        <script src="/js/infinite-scroll.pkgd.min.js"></script>
        <script src="/js/masonry.pkgd.min.js"></script>
        <script src="/js/jquery.fancybox.min.js"></script>

        <script>

        /*var $grid = $('.grid').imagesLoaded( function() {
            $grid.masonry({
                itemSelector: '.grid-item',
                percentPosition: true,
                columnWidth: '.grid-item',
                gutter: 10
            }); 
        });*/

        var $grid = $('.grid').masonry({
            itemSelector: 'none',
            columnWidth: '.grid-item',
            gutter: 15,
            percentPosition: true,
            /*transitionDuration: 0,*/
            /*stagger: 50,*/
            // nicer reveal transition
            visibleStyle: { transform: 'translateY(0)', opacity: 1 },
            hiddenStyle: { transform: 'translateY(100px)', opacity: 0 },
        });

        // get Masonry instance
        var msnry = $grid.data('masonry');

        // initial items reveal
        $grid.imagesLoaded( function() {
            $grid.removeClass('are-images-unloaded');
            $grid.masonry( 'option', { itemSelector: '.grid-item' });
            var $items = $grid.find('.grid-item');
            $grid.masonry( 'appended', $items );
        });

        function getPenPath() {
            if (this.loadCount == 0) {this.loadCount = 1;}
            if (this.loadCount < {{pageMax}}) {
                var page = ( this.loadCount + 1 );
                return '/admin/galerie/{{galerieId}}/'+page+'/edit/next' 
            }
        }

        // init Infinte Scroll
        if ({{pageMax}}>1) { 
            $grid.infiniteScroll({
                path: getPenPath,
                append: '.grid-item',
                outlayer: msnry,
                status: '.page-load-status',
                history: false,
                onInit: function() {
                    this.on('append', function() {
                        $('i[data-action="delete"]').off('click');
                        handleStatutImg();
                        /*if ($.fancybox.isMobile) { // permet de retirer les <a> des images lors de la supression de fancybox pour les mobiles, encore des problemes 
                            $(".grid-item img").unwrap(); 
                        }*/
                    });
                }
            });
        }

        $('.custom-file-input').on('change', function(event) {
            var files = $('#uploadFile').prop('files');
            var inputFile = event.currentTarget;
            var imgError=[];
            var i=0;
            $.each(files, function() {
                if ((this['size']>=500000) || ((this['type'] != 'image/jpeg') && (this['type'] != 'image/png'))) {
                    imgError[i]=this['name'];
                    i++;
                }
            });
            if (imgError.length == 0) {
                $('#inputFilesError').hide();
                $('#inputFilesError').html("");
                $('#submit').prop('disabled', false);
                // Input cover image de la galerie, permet de remplir le texte à l'interieure de l'input lors de la sélection d'un fichié.
                if (inputFile.files.length == 1) {
                    filesName = inputFile.files[0].name;
                } else {
                    filesName = inputFile.files.length+ ' images';
                }
                $(inputFile).parent().find('.custom-file-label').html(filesName);
            } else {
                $(inputFile).parent().find('.custom-file-label').html('Attention, format ou taille de fichier invalide');
                var textError = 'Formats acceptés : jpeg/png | Taille < 500ko<br>Erreurs sur les fichiers :<br>'
                for (var i=0;i<imgError.length;i++) {
                    textError = textError+imgError[i]+', '
                }
                $('#inputFilesError').html(textError);
                $('#inputFilesError').show();
                $('#submit').prop('disabled', true);
            }
        });

        // Permet de manipuler l'apparence des image a supprimer, et de changer "le statut" de celle que l'on veut supprimer lors du submit
        function handleStatutImg() {
            $('i[data-action="delete"]').click(function() {
                const target = this.dataset.target;
                $(this).toggleClass("far fas").toggleClass("fa-trash-alt fa-undo");
                //$(target).toggleClass("delete");
                $(target).children().find('.removeStatus').toggleClass("delete");
                if ($(this).hasClass('fa-trash-alt')) {
                    $(target+' *').css({'opacity':'1','transition':'opacity 0.5s'});
                } else {
                    $(target+' :not(div, i[data-action="delete"])').css({'opacity':'0.2','transition':'opacity 0.5s'});  
                }
            });
        }
        handleStatutImg();

        // Supprime du dom les images avec le status delete avant de soumettre le formulaire
        function deleteImgDomBeforeSubmit() {
            $("form[name='galerie']").submit(function() {
                $('.removeStatus').each(function(){
                    if($(this).hasClass('delete')) {
                        $(this).val('1');
                    }
                });
                /*$('.captionImg').each(function(){
                    if ($(this).data("origin-content") != $(this).val()) {
                        $('<input>').attr('type','hidden').attr('name','updateCaption[]').attr('data-id',$(this).data("id")).attr('value',$(this).data("id")+'-'+$(this).val()).appendTo('form');
                    }          
                });*/
                //event.preventDefault();
                //console.log($('#galerie_title').serialize());
                $('#b-e-default').hide();
                $('#b-e-loading').show();
                $("input[name='firstImg']").val($(".grid").children(":first").data("id"));
                $("input[name='lastImg']").val($(".grid").children(":last").data("id"));
                //$('.delete').remove();
                // barre de chargement ajax 
                /*if ($('#uploadFile').prop('files').length !== 0) {
                    /*var progressBar=document.getElementById('progress-bar');
                    var files = $('#uploadFile').prop('files');
                    var data = new FormData(document.forms.namedItem("galerie"));
                    data.append('uploadFile[]', files);
                    var request = new XMLHttpRequest();
                    request.open('POST', "{{ path('admin_galerie_edit', {'id': galerieId, 'page': 1}) }}");
                    $('.progress').removeClass('d-none');
                    request.upload.onprogress = function(event2){
                        var percent = Math.round(event2.loaded/event2.total * 100);
                        progressBar.setAttribute("style", "width:"+percent+"%")
                    }
                    request.onload = function() {
                        if (request.status == 200) {
                            // mettre l'addflash ? 
                            progressBar.innerHTML="Uploaded!";
                            window.location = "{{ path('admin_galerie_edit', {'id': galerieId, 'page': 1}) }}";
                        }
                        else {
                            output = request.status;
                        }
                    }
                    request.send(data);
                    return false;
                }*/
            });
        }
        deleteImgDomBeforeSubmit();

        // réinitialise la page en la rechargeant sans enregistrer les modifications apporté
        $('#cancel').on('click', function() {
            location.reload();
        });

        // supprime le lien href de vichupload
        $(".vich-image a").removeAttr("href");

        // fait apparaître le bouton de retour top à une certaine distance en pixel de la page courante par rapport au top
        window.onscroll = function() {
            document.getElementById("cRetour").className = (window.pageYOffset > 100) ? "cVisible" : "cInvisible";
        };

        // donne un effet de défilement lisse 
        $('a#cRetour').click(function(){
            $('html, body').animate({scrollTop: 0}, 1500);
        });  

        // lightbox fancybox
        $().fancybox({
            selector:'[data-fancybox="images"]',
            loop: false,
            beforeShow: function(instance, current) {
                // When we reach the last item in current Fancybox instance, load more images with Infinite Scroll and append them to Fancybox 
                if (current.index === instance.group.length - 1) { // 1. Check if at end of group
                    // 2. Trigger infinite scroll to load next set of images
                    $grid.infiniteScroll('loadNextPage');
                    // 3. Get the newly loaded set of images
                    var norepeat = true;
                    $grid.on( 'load.infiniteScroll', function( event, response, path ) {
                            if (norepeat) {
                                var $posts = $(response).find('.grid-item');
                                // 4. Set up an array to put them in
                                var newImages = [];
                                $($posts).each( function( index, element ){
                                    // 5. Construct the objects
                                    var a = {};
                                    a['type'] = 'image';
                                    a['src'] = $(this).find('a').attr('href');
                                    a['opts'] = {'caption' : $(this).find('a').attr('data-caption') }
                                    // 6. Add them to the array
                                    newImages.push(a);
                                });
                                // 7. And append to this instance
                                instance.addContent(newImages);
                                norepeat = false;
                            }
                    });
                }
            }
        });
        // permet de désactiver fancybox sur mobile, encore quelque problème 
        /*if ($.fancybox.isMobile) { 
            $.fancybox.destroy();
            $(".grid-item img").unwrap(); 
        }*/

    </script>
{% endblock %}